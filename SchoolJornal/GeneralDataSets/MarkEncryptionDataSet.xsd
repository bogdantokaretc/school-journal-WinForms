<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MarkEncryptionDataSet" targetNamespace="http://tempuri.org/MarkEncryptionDataSet.xsd" xmlns:mstns="http://tempuri.org/MarkEncryptionDataSet.xsd" xmlns="http://tempuri.org/MarkEncryptionDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SchoolRegisterConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SchoolRegisterConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SchoolJornal.Properties.Settings.GlobalReference.Default.SchoolRegisterConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Mark_EncryptionTableAdapter" GeneratorDataComponentClassName="Mark_EncryptionTableAdapter" Name="Mark_Encryption" UserDataComponentName="Mark_EncryptionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SchoolRegisterConnectionString1 (Settings)" DbObjectName="SchoolRegister.dbo.Mark_Encryption" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Mark_Encryption] WHERE (([ID_Mark] = @Original_ID_Mark) AND ([Mark_Cryption] = @Original_Mark_Cryption))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_ID_Mark" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ID_Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Mark_Cryption" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Mark_Cryption" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Mark_Encryption] ([ID_Mark], [Mark_Cryption]) VALUES (@ID_Mark, @Mark_Cryption);
SELECT ID_Mark, Mark_Cryption FROM Mark_Encryption WHERE (ID_Mark = @ID_Mark)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@ID_Mark" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ID_Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Mark_Cryption" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Mark_Cryption" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_Mark, Mark_Cryption FROM dbo.Mark_Encryption</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Mark_Encryption] SET [ID_Mark] = @ID_Mark, [Mark_Cryption] = @Mark_Cryption WHERE (([ID_Mark] = @Original_ID_Mark) AND ([Mark_Cryption] = @Original_Mark_Cryption));
SELECT ID_Mark, Mark_Cryption FROM Mark_Encryption WHERE (ID_Mark = @ID_Mark)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@ID_Mark" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ID_Mark" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Mark_Cryption" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Mark_Cryption" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_ID_Mark" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="ID_Mark" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Mark_Cryption" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Mark_Cryption" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Mark" DataSetColumn="ID_Mark" />
              <Mapping SourceColumn="Mark_Cryption" DataSetColumn="Mark_Cryption" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MarkEncryptionDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="MarkEncryptionDataSet" msprop:Generator_DataSetName="MarkEncryptionDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Mark_Encryption" msprop:Generator_RowClassName="Mark_EncryptionRow" msprop:Generator_RowEvHandlerName="Mark_EncryptionRowChangeEventHandler" msprop:Generator_RowDeletedName="Mark_EncryptionRowDeleted" msprop:Generator_RowDeletingName="Mark_EncryptionRowDeleting" msprop:Generator_RowEvArgName="Mark_EncryptionRowChangeEvent" msprop:Generator_TablePropName="Mark_Encryption" msprop:Generator_RowChangedName="Mark_EncryptionRowChanged" msprop:Generator_RowChangingName="Mark_EncryptionRowChanging" msprop:Generator_TableClassName="Mark_EncryptionDataTable" msprop:Generator_UserTableName="Mark_Encryption" msprop:Generator_TableVarName="tableMark_Encryption">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Mark" msprop:Generator_ColumnPropNameInRow="ID_Mark" msprop:Generator_ColumnPropNameInTable="ID_MarkColumn" msprop:Generator_ColumnVarNameInTable="columnID_Mark" msprop:Generator_UserColumnName="ID_Mark">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="5" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Mark_Cryption" msprop:Generator_ColumnPropNameInRow="Mark_Cryption" msprop:Generator_ColumnPropNameInTable="Mark_CryptionColumn" msprop:Generator_ColumnVarNameInTable="columnMark_Cryption" msprop:Generator_UserColumnName="Mark_Cryption">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Mark_Encryption" />
      <xs:field xpath="mstns:ID_Mark" />
    </xs:unique>
  </xs:element>
</xs:schema>